/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/9.0.65
 * Generated at: 2022-10-19 04:30:52 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;

public final class signup_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = null;
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    if (!javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      final java.lang.String _jspx_method = request.getMethod();
      if ("OPTIONS".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        return;
      }
      if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPs only permit GET, POST or HEAD. Jasper also permits OPTIONS");
        return;
      }
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("<!DOCTYPE html>\r\n");
      out.write("<html>\r\n");
      out.write("<head>\r\n");
      out.write("<meta charset=\"UTF-8\">\r\n");
      out.write("<title>signUp hear</title>\r\n");
      out.write("<!-- Font awesome cdn -->\r\n");
      out.write("<link rel=\"stylesheet\"\r\n");
      out.write("	href=\"https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.2.0/css/all.min.css\"\r\n");
      out.write("	integrity=\"sha512-xh6O/CkQoPOWDdYTDqeRdPCVd1SpvCA9XXcUnZS2FmJNp1coAFzvtCN9BmamE+4aHK8yyUHUSCcJHgXloTyT2A==\"\r\n");
      out.write("	crossorigin=\"anonymous\" referrerpolicy=\"no-referrer\" />\r\n");
      out.write("<style type=\"text/css\">\r\n");
      out.write("* {\r\n");
      out.write("	padding: 0; \r\n");
      out.write("	margin: 0;\r\n");
      out.write("	box-sizing: border-box;\r\n");
      out.write("	font-family: sans-serif;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("h1 {\r\n");
      out.write("	font-size: 3rem;\r\n");
      out.write("	padding: 2rem 0;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("table {\r\n");
      out.write("	display: flex;\r\n");
      out.write("	justify-content: center;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write(".singUp {\r\n");
      out.write("	width: 50vw;\r\n");
      out.write("	margin: 150px auto;\r\n");
      out.write("	text-align: center;\r\n");
      out.write("	border-radius: 10px;\r\n");
      out.write("	box-shadow: rgba(0, 0, 0, 0.19) 0px -4px 20px, rgba(0, 0, 0, 0.23) 0px\r\n");
      out.write("		6px 6px;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write(".form {\r\n");
      out.write("	display: flex;\r\n");
      out.write("	justify-content: center;\r\n");
      out.write("	align-items: center;\r\n");
      out.write("	font-size: 1.5rem;\r\n");
      out.write("	gap: 1rem;\r\n");
      out.write("	padding: 10px;\r\n");
      out.write("	background-color: #ececec;\r\n");
      out.write("	border-radius: 5px;\r\n");
      out.write("	margin-bottom: 1.4rem;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write(".form input {\r\n");
      out.write("	width: 500px;\r\n");
      out.write("	border: none;\r\n");
      out.write("	outline: none;\r\n");
      out.write("	font-size: 1rem;\r\n");
      out.write("	background-color: transparent;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("button {\r\n");
      out.write("	padding: 10px 15px;\r\n");
      out.write("	border: none;\r\n");
      out.write("	outline: none;\r\n");
      out.write("	cursor: pointer;\r\n");
      out.write("	border-radius: 5px;\r\n");
      out.write("	background-color: transparent;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write(".button {\r\n");
      out.write("	cursor: pointer;\r\n");
      out.write("	transition: 0.2s ease;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write(".button input {\r\n");
      out.write("	border: none;\r\n");
      out.write("	outline: none;\r\n");
      out.write("	cursor: pointer;\r\n");
      out.write("	font-weight: bold;\r\n");
      out.write("	font-size: 1.4rem !important;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write(".button:hover {\r\n");
      out.write("	background-color: green;\r\n");
      out.write("	scale: 0.8;\r\n");
      out.write("}\r\n");
      out.write("</style>\r\n");
      out.write("</head>\r\n");
      out.write("<body>\r\n");
      out.write("\r\n");
      out.write("	<div class=\"singUp\">\r\n");
      out.write("		<form action=\"signup\">\r\n");
      out.write("\r\n");
      out.write("			<table>\r\n");
      out.write("				<h1>Sign Up</h1>\r\n");
      out.write("				<span style=\"color: red\">");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${emailError}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("</span>\r\n");
      out.write("				<tr>\r\n");
      out.write("					<td>\r\n");
      out.write("						<div class=\"form\">\r\n");
      out.write("							<i class=\"fa-solid fa-user\"></i> <input type=\"text\" name=\"name\"\r\n");
      out.write("								placeholder=\"First name & last name\" required>\r\n");
      out.write("						</div>\r\n");
      out.write("					</td>\r\n");
      out.write("				</tr>\r\n");
      out.write("				<tr>\r\n");
      out.write("					<td>\r\n");
      out.write("						<div class=\"form\">\r\n");
      out.write("							<i class=\"fa-solid fa-envelope\"></i> <input type=\"email\"\r\n");
      out.write("								name=\"email\" placeholder=\"Enter email address\" required>\r\n");
      out.write("						</div>\r\n");
      out.write("					</td>\r\n");
      out.write("				</tr>\r\n");
      out.write("				<tr>\r\n");
      out.write("					<td>\r\n");
      out.write("						<div class=\"form\">\r\n");
      out.write("							<i class=\"fa-solid fa-lock\"></i> <input type=\"text\"\r\n");
      out.write("								name=\"password\" id=\"pass\" placeholder=\"Enter password\" required>\r\n");
      out.write("						</div>\r\n");
      out.write("					</td>\r\n");
      out.write("				</tr>\r\n");
      out.write("				<tr>\r\n");
      out.write("					<td>\r\n");
      out.write("						<div class=\"form passform\" onkeyup=\"passErrorKeyUp()\">\r\n");
      out.write("							<i class=\"fa-solid fa-lock\"></i> <input type=\"text\"\r\n");
      out.write("								name=\"conPass\" id=\"conPass\" placeholder=\"Confirm password\"\r\n");
      out.write("								required>\r\n");
      out.write("						</div> <span id=\"span\" style=\"color: red\"></span>\r\n");
      out.write("					</td>\r\n");
      out.write("				</tr>\r\n");
      out.write("				<tr>\r\n");
      out.write("					<td>\r\n");
      out.write("						<div class=\"form\">\r\n");
      out.write("							<i class=\"fa-solid fa-phone\"></i> <input type=\"text\"\r\n");
      out.write("								name=\"number\" placeholder=\"Enter Mobile Number\" required>\r\n");
      out.write("						</div>\r\n");
      out.write("					</td>\r\n");
      out.write("				</tr>\r\n");
      out.write("				<tr>\r\n");
      out.write("					<td>\r\n");
      out.write("						<div class=\"form button\">\r\n");
      out.write("							<button>\r\n");
      out.write("								<input type=\"submit\" value=\"Create Account\">\r\n");
      out.write("							</button>\r\n");
      out.write("						</div>\r\n");
      out.write("					</td>\r\n");
      out.write("					<td>\r\n");
      out.write("				</tr>\r\n");
      out.write("			</table>\r\n");
      out.write("		</form>\r\n");
      out.write("	</div>\r\n");
      out.write("</body>\r\n");
      out.write("\r\n");
      out.write("<script type=\"text/javascript\">\r\n");
      out.write("\r\n");
      out.write("let pass = document.getElementById(\"pass\");\r\n");
      out.write("let conPass =  document.getElementById(\"conPass\");\r\n");
      out.write("let passform = document.querySelector(\".passform\");\r\n");
      out.write("let span = document.getElementById(\"span\");\r\n");
      out.write("const passErrorKeyUp = ()=>{\r\n");
      out.write("	\r\n");
      out.write("	if(pass.value != conPass.value)\r\n");
      out.write("		{		\r\n");
      out.write("		passform.style.border=\"1px solid red\";\r\n");
      out.write("		span.innerHTML=\"password and confirm password both are defferent...\";\r\n");
      out.write("		}\r\n");
      out.write("		 \r\n");
      out.write("	else{\r\n");
      out.write("		passform.style.border=\"none\";\r\n");
      out.write("		span.innerHTML=\"\";\r\n");
      out.write("		}\r\n");
      out.write("\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("</script>\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
