package dao;

import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.ArrayList;

import model.student;

public class studentDao {

	Connection cn;

	public studentDao() {

		try {
			Class.forName("com.mysql.cj.jdbc.Driver");
			cn = DriverManager.getConnection("jdbc:mysql://localhost:3306/java", "root", "");
		} catch (ClassNotFoundException | SQLException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}

	}

	public int addStudent(student s) {

		int i = 0;

		try {
			PreparedStatement ps = cn.prepareStatement("insert into student values(?,?,?,?,?,?,?)");
			ps.setInt(1, 0);
			ps.setString(2, s.getFname());
			ps.setString(3, s.getLname());
			ps.setString(4, s.getEmail());
			ps.setString(5, s.getPassword());
			ps.setString(6, s.getNumber());
			ps.setString(7, s.getCity());
			i = ps.executeUpdate();
		} catch (SQLException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}

		return i;

	}

	public ArrayList<student> viewStudent() {

		ArrayList<student> al = new ArrayList();

		try {
			PreparedStatement ps = cn.prepareStatement("select * from student");
			ResultSet rs = ps.executeQuery();
			while (rs.next()) {

				student s = new student();

				s.setId(rs.getInt(1));
				s.setFname(rs.getString(2));
				s.setLname(rs.getString(3));
				s.setEmail(rs.getString(4));
				s.setPassword(rs.getString(5));
				s.setNumber(rs.getString(6));
				s.setCity(rs.getString(7));

				al.add(s);

			}
		} catch (SQLException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}

		return al;

	}

	public int deleteStudent(Integer uid) {

		int i = 0;

		try {
			PreparedStatement ps = cn.prepareStatement("delete from student where id=?");
			ps.setInt(1, uid);
			i = ps.executeUpdate();
		} catch (SQLException e) {

			e.printStackTrace();
		}

		return i;
	}

	public student getDataById(Integer uid) {

		student s = new student();

		try {
			PreparedStatement ps = cn.prepareStatement("select * from student where id=?");
			ps.setInt(1, uid);
			ResultSet rs = ps.executeQuery();

			while (rs.next()) {
				s.setId(rs.getInt(1));
				s.setFname(rs.getString(2));
				s.setLname(rs.getString(3));
				s.setEmail(rs.getString(4));
				s.setPassword(rs.getString(5));
				s.setNumber(rs.getString(6));
				s.setCity(rs.getString(7));

			}
		} catch (SQLException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}

		return s;
	}

	public int updateStudent(student s) {

		int update = 0;

		try {
			PreparedStatement ps = cn.prepareStatement(
					"update student fname=?, lname=?, email=?, password=?, number=?, city=? where id=?");
		} catch (SQLException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}

		return update;
	}

}
